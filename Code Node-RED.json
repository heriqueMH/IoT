[
    {
        "id": "7b71b4e11208815a",
        "type": "tab",
        "label": "Monitoramento ESP32",
        "disabled": false,
        "info": ""
    },
    {
        "id": "16f02604329e26d9",
        "type": "mqtt in",
        "z": "7b71b4e11208815a",
        "name": "Recebe dados ESP32",
        "topic": "TESTMACK1870/+/+",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a88e9b92f8dbdd0d",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 300,
        "y": 260,
        "wires": [
            [
                "2937cf4fd217fc02",
                "3aac68afdd58fc06"
            ]
        ]
    },
    {
        "id": "2937cf4fd217fc02",
        "type": "function",
        "z": "7b71b4e11208815a",
        "name": "Extrair e formatar dados",
        "func": "let dados = (typeof msg.payload === \"string\") ? JSON.parse(msg.payload) : msg.payload;\n\nmsg.payload = {\n  value: Number(dados.distancia ?? 0),\n  estacao: dados.estacao || \"desconhecida\",\n  rota: dados.rota || \"sem-rota\"\n};\n\nmsg.measurement = \"distancia\";\n\nnode.warn(\"Distância enviada: \" + msg.payload.value);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 220,
        "wires": [
            [
                "552395ca8e0bdd4b",
                "7a0b3553920866e5"
            ]
        ]
    },
    {
        "id": "7a0b3553920866e5",
        "type": "debug",
        "z": "7b71b4e11208815a",
        "name": "Debug Distância",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 180,
        "wires": []
    },
    {
        "id": "f91f62b301356b17",
        "type": "debug",
        "z": "7b71b4e11208815a",
        "name": "Debug Passagens",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 320,
        "wires": []
    },
    {
        "id": "552395ca8e0bdd4b",
        "type": "influxdb out",
        "z": "7b71b4e11208815a",
        "influxdb": "a1influxserver",
        "name": "Distancia",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "Mackenzie",
        "bucket": "Projeto",
        "x": 1130,
        "y": 240,
        "wires": []
    },
    {
        "id": "1f2d71ea773768cd",
        "type": "influxdb out",
        "z": "7b71b4e11208815a",
        "influxdb": "a1influxserver",
        "name": "Passagens",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "Mackenzie",
        "bucket": "Projeto",
        "x": 1130,
        "y": 400,
        "wires": []
    },
    {
        "id": "3aac68afdd58fc06",
        "type": "function",
        "z": "7b71b4e11208815a",
        "name": "Extrair e formatar dados",
        "func": "let dados = (typeof msg.payload === \"string\") ? JSON.parse(msg.payload) : msg.payload;\n\nmsg.payload = {\n  value: Number(dados.passagens ?? 0),\n  estacao: dados.estacao || \"desconhecida\",\n  rota: dados.rota || \"sem-rota\"\n};\n\nmsg.measurement = \"passagens\";\n\nnode.warn(\"Passagem enviada: \" + msg.payload.value);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 300,
        "wires": [
            [
                "f91f62b301356b17",
                "1f2d71ea773768cd",
                "d2ccdd6ce1d1eae7"
            ]
        ]
    },
    {
        "id": "d2ccdd6ce1d1eae7",
        "type": "function",
        "z": "7b71b4e11208815a",
        "name": "Trata mensagem",
        "func": "var qtd = Number(msg.payload.passagens);\n\nif (qtd < 100) {\n    msg.payload = \"⚠️ Apenas \" + qtd + \" passagens registradas. Recomendamos utilizar a rota alternativa B.\";\n    msg.text = msg.payload; // compatível com serviços que usam msg.text\n    return msg;\n}\n\nreturn null; // não envia nada se não atingir a condição",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 400,
        "wires": [
            [
                "207d1b955b4eab0e"
            ]
        ]
    },
    {
        "id": "207d1b955b4eab0e",
        "type": "node-red-contrib-whatsapp-cmb-send-message",
        "z": "7b71b4e11208815a",
        "name": "",
        "credtype": "account",
        "account": "a67426a4e7e14110",
        "text": "payload",
        "phonenumbervalue": "",
        "apikeyvalue": "",
        "apikeyinputtypemessage": "msg",
        "phonenumberinputtypemessage": "msg",
        "inputtypemessage": "msg",
        "rejectssl": false,
        "x": 1000,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "a88e9b92f8dbdd0d",
        "type": "mqtt-broker",
        "name": "HiveMQ",
        "broker": "broker.hivemq.com",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "a1influxserver",
        "type": "influxdb",
        "hostname": "us-east-1-1.aws.cloud2.influxdata.com",
        "port": "443",
        "protocol": "https",
        "database": "teste",
        "name": "InfluxDB Cloud",
        "usetls": true,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com/",
        "timeout": "",
        "rejectUnauthorized": false
    },
    {
        "id": "a67426a4e7e14110",
        "type": "node-red-contrib-whatsapp-cmb-account",
        "name": "Meu biriri"
    }
]
